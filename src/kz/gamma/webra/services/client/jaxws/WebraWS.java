
package kz.gamma.webra.services.client.jaxws;

import kz.gamma.webra.services.common.entities.ResponsePkiService;
import kz.gamma.webra.services.common.entities.RequestPkiService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1-b03-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "WebraWS", targetNamespace = "http://www.gamma.kz/webra/xsd")
public interface WebraWS {


    /**
     * 
     * @param testParam
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "echo", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.Echo")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.EchoResponse")
    public String echo(
        @WebParam(name = "testParam", targetNamespace = "")
        String testParam);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentXSD", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetDocumentXSD")
    @ResponseWrapper(localName = "getDocumentXSDResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetDocumentXSDResponse")
    public String getDocumentXSD();

    /**
     * 
     * @param isWithJCE
     * @param isManager
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTumarAdditional", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetTumarAdditional")
    @ResponseWrapper(localName = "getTumarAdditionalResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetTumarAdditionalResponse")
    public byte[] getTumarAdditional(
        @WebParam(name = "isManager", targetNamespace = "")
        boolean isManager,
        @WebParam(name = "isWithJCE", targetNamespace = "")
        boolean isWithJCE);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTypeXSD", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetTypeXSD")
    @ResponseWrapper(localName = "getTypeXSDResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetTypeXSDResponse")
    public String getTypeXSD();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.GetVersionResponse")
    public List<String> getVersion();

    /**
     * 
     * @param request
     * @return
     *     returns kz.gamma.webra.services.client.jaxws.PkiServiceResponse.Return
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "pkiService", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.PkiService")
    @ResponseWrapper(localName = "pkiServiceResponse", targetNamespace = "http://www.gamma.kz/webra/xsd", className = "kz.gamma.webra.services.client.jaxws.PkiServiceResponse")
    public ResponsePkiService pkiService(
        @WebParam(name = "request", targetNamespace = "")
        RequestPkiService request);

}
